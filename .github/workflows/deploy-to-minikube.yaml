name: CI/CD Pipeline for Backend Deployment

on:
  push:
    branches:
      - main  # Change this to your main branch name

jobs:
  deploy-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Minikube
      - name: Set up Minikube
        uses: stefanprodan/minikube-tools-action@v2
        with:
          kubectl_version: 'latest'
          minikube_version: 'latest'
          driver: docker  # Use Docker as Minikube driver
          kubernetes_version: 'latest'

      # Build the Docker image
      - name: Build Docker image
        run: |
          eval $(minikube docker-env)
          docker build -t assignment-backend:latest backend

      # Tag the image for Minikube
      - name: Tag Docker image
        run: docker tag assignment-backend:latest assignment-backend:latest

      # Deploy to Minikube
      - name: Deploy to Minikube
        run: |
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/backend-service.yaml

      # Wait for deployment to be ready
      - name: Wait for deployment rollout
        run: kubectl rollout status deployment/backend-deployment --timeout=1m

        # Log into running pod
      - name: Log into running pod
        run: |
          echo "POD_NAME=$(kubectl get pod -l app=backend -o jsonpath="{.items[0].metadata.name}")"
          minikube logs
          # kubectl exec -it $POD_NAME -- /bin/bash
          kubectl logs $POD_NAME

      # Test requests
      - name: Test /departments endpoint
        run: |
          curl -X POST -H "Content-Type: application/text" -d "Abs" http://localhost:8080/departments

      - name: Test /stories endpoint
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{
                  "headline": "Cool story",
                  "content": "Really cool story",
                  "departmentId": 1
                }' http://localhost:8080/stories

      # Get pod name
      - name: Get pod name
        id: get_pod_name
        run: echo "::set-output name=pod_name::$(kubectl get pods -l app=backend -o jsonpath='{.items[0].metadata.name}')"

      # Clean up Docker images (optional)
      - name: Clean up Docker images
        run: docker system prune -af
